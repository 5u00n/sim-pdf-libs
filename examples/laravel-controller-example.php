<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use SimPdf\SimPdfLibs\Facades\SimPdf;

class PdfController extends Controller
{
    /**
     * Generate a basic PDF
     */
    public function generateBasicPdf()
    {
        $html = view('pdf.basic-template', [
            'title' => 'Basic PDF Document',
            'content' => 'This is a basic PDF generated using SimPDF library.',
            'data' => [
                'name' => 'John Doe',
                'email' => 'john@example.com',
                'date' => now()->format('Y-m-d H:i:s')
            ]
        ])->render();

        return SimPdf::loadHtml($html)
            ->setPaper('A4', 'portrait')
            ->enablePageNumbers()
            ->download('basic-document.pdf');
    }

    /**
     * Generate a multi-page PDF with custom breaks
     */
    public function generateMultiPagePdf(Request $request)
    {
        $employees = $this->getEmployeeData();
        $perPage = $request->get('per_page', 20);
        
        $html = view('pdf.employee-report', [
            'employees' => $employees,
            'perPage' => $perPage,
            'total' => count($employees)
        ])->render();

        return SimPdf::loadHtml($html)
            ->setPaper('A4', 'portrait')
            ->enablePageNumbers([
                'position' => 'bottom-right',
                'format' => 'Page {PAGE_NUM} of {PAGE_COUNT}'
            ])
            ->setHeader('
                <div style="display: flex; justify-content: space-between;">
                    <h3>Employee Report</h3>
                    <span>' . now()->format('M d, Y') . '</span>
                </div>
            ', [
                'height' => '60px',
                'background' => '#2c3e50',
                'color' => 'white',
                'padding' => '15px'
            ])
            ->setFooter('
                <div style="text-align: center;">
                    <p>Generated by SimPDF Library | Confidential</p>
                </div>
            ', [
                'height' => '40px',
                'background' => '#34495e',
                'color' => 'white',
                'padding' => '10px'
            ])
            ->addStyle('
                .employee-table {
                    width: 100%;
                    border-collapse: collapse;
                    page-break-inside: auto;
                }
                .employee-table thead {
                    display: table-header-group;
                }
                .employee-table tbody {
                    page-break-inside: avoid;
                }
                .employee-table tr {
                    page-break-inside: avoid;
                }
                .employee-table th,
                .employee-table td {
                    border: 1px solid #ddd;
                    padding: 8px;
                    text-align: left;
                }
                .employee-table th {
                    background-color: #3498db;
                    color: white;
                }
                .page-break {
                    page-break-before: always;
                }
            ')
            ->breakTable([
                'repeat_header' => true,
                'min_rows' => 5,
                'max_rows' => $perPage
            ])
            ->download('employee-report.pdf');
    }

    /**
     * Generate PDF with custom page breaks
     */
    public function generateCustomBreakPdf()
    {
        $sections = [
            'Introduction' => 'This is the introduction section...',
            'Methodology' => 'This is the methodology section...',
            'Results' => 'This is the results section...',
            'Conclusion' => 'This is the conclusion section...'
        ];

        $html = '<!DOCTYPE html><html><head><title>Custom Break PDF</title></head><body>';
        
        foreach ($sections as $title => $content) {
            $html .= "<h1>{$title}</h1>";
            $html .= "<p>{$content}</p>";
            
            // Add page break after each section except the last one
            if ($title !== 'Conclusion') {
                $html .= '<div class="page-break"></div>';
            }
        }
        
        $html .= '</body></html>';

        return SimPdf::loadHtml($html)
            ->setPaper('A4', 'portrait')
            ->enablePageNumbers()
            ->addStyle('
                .page-break {
                    page-break-before: always;
                }
                h1 {
                    color: #2c3e50;
                    border-bottom: 2px solid #3498db;
                    padding-bottom: 10px;
                }
            ')
            ->download('custom-break-document.pdf');
    }

    /**
     * Generate PDF with watermarks and bookmarks
     */
    public function generateAdvancedPdf()
    {
        $html = view('pdf.advanced-template', [
            'title' => 'Advanced PDF Document',
            'sections' => [
                'Overview' => 'This section provides an overview...',
                'Details' => 'This section provides detailed information...',
                'Summary' => 'This section provides a summary...'
            ]
        ])->render();

        return SimPdf::loadHtml($html)
            ->setPaper('A4', 'portrait')
            ->enablePageNumbers([
                'position' => 'bottom-center',
                'format' => 'Page {PAGE_NUM} of {PAGE_COUNT}'
            ])
            ->setHeader('
                <div style="text-align: center;">
                    <h2>Advanced Document</h2>
                </div>
            ', [
                'height' => '50px',
                'background' => '#f8f9fa',
                'border' => '1px solid #dee2e6'
            ])
            ->setFooter('
                <div style="text-align: center; font-size: 10px;">
                    <p>Â© 2024 Company Name. All rights reserved.</p>
                </div>
            ', [
                'height' => '30px',
                'background' => '#f8f9fa',
                'border' => '1px solid #dee2e6'
            ])
            ->addWatermark('DRAFT', [
                'opacity' => 0.1,
                'font-size' => '48px',
                'color' => '#ff0000'
            ])
            ->addBookmark('Overview', 1)
            ->addBookmark('Details', 1)
            ->addBookmark('Summary', 1)
            ->setMetadata([
                'Title' => 'Advanced PDF Document',
                'Author' => 'SimPDF Library',
                'Subject' => 'Advanced PDF Generation',
                'Keywords' => 'PDF, Laravel, Advanced'
            ])
            ->download('advanced-document.pdf');
    }

    /**
     * Get employee data for testing
     */
    private function getEmployeeData()
    {
        $employees = [];
        for ($i = 1; $i <= 100; $i++) {
            $employees[] = [
                'id' => $i,
                'name' => "Employee {$i}",
                'email' => "employee{$i}@company.com",
                'department' => "Department " . ($i % 5 + 1),
                'salary' => rand(30000, 100000),
                'status' => rand(0, 1) ? 'Active' : 'Inactive'
            ];
        }
        return $employees;
    }
}
